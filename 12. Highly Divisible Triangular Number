#My Code (Portrays Basic Idea)
n = 10
n1= (n*(n+1))//2 

def factors(num):
    factor = []
    count = 1
    for i in range(1, num+1):
        if num % i == 0:
            factor.append(i)
    return factor


for _ in range(10000000, 100000000): #Aribitarly large Values
    n1 = _
    factor_n = factors(n1)
    if len(factor_n) > 500:
        break
    print(factor_n)

---------------------------------------------------------------------------------
#Similar Code with extremely lesser time taken 
from math import sqrt
def count_divisors(n):
    d = {}
    count = 1
    while n % 2 == 0:
        n = n / 2
        try:
            d[2] += 1
        except KeyError:
            d[2] = 1
    for i in range(3, int(sqrt(n+1)), 2):
        while n % i == 0 and i != n:
            n = n / i
            try:
                d[i] += 1
            except KeyError:
                d[i] = 1
    d[n] = 1
    for _, v in d.items():
        count = count * (v + 1)

    return count
def tri_number(num):
  next = 1 + int(sqrt(1+(8 * num)))
  return num + (next/2)
def main():
    i = 1
    while count_divisors(i) < 100:
        i = tri_number(i)
    return i
print(main())
-----------------------------------------------
